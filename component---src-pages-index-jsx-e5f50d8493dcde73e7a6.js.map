{"version":3,"file":"component---src-pages-index-jsx-e5f50d8493dcde73e7a6.js","mappings":"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","sources":["webpack://colorado-live-music-dir/./node_modules/url-join/lib/url-join.js","webpack://colorado-live-music-dir/./src/images/Default-OG-Image.png","webpack://colorado-live-music-dir/./src/components/SEO/SEO.jsx","webpack://colorado-live-music-dir/./src/pages/index.jsx"],"sourcesContent":["(function (name, context, definition) {\n  if (typeof module !== 'undefined' && module.exports) module.exports = definition();else if (typeof define === 'function' && define.amd) define(definition);else context[name] = definition();\n})('urljoin', this, function () {\n  function normalize(strArray) {\n    var resultArray = [];\n\n    if (strArray.length === 0) {\n      return '';\n    }\n\n    if (typeof strArray[0] !== 'string') {\n      throw new TypeError('Url must be a string. Received ' + strArray[0]);\n    } // If the first part is a plain protocol, we combine it with the next part.\n\n\n    if (strArray[0].match(/^[^/:]+:\\/*$/) && strArray.length > 1) {\n      var first = strArray.shift();\n      strArray[0] = first + strArray[0];\n    } // There must be two or three slashes in the file protocol, two slashes in anything else.\n\n\n    if (strArray[0].match(/^file:\\/\\/\\//)) {\n      strArray[0] = strArray[0].replace(/^([^/:]+):\\/*/, '$1:///');\n    } else {\n      strArray[0] = strArray[0].replace(/^([^/:]+):\\/*/, '$1://');\n    }\n\n    for (var i = 0; i < strArray.length; i++) {\n      var component = strArray[i];\n\n      if (typeof component !== 'string') {\n        throw new TypeError('Url must be a string. Received ' + component);\n      }\n\n      if (component === '') {\n        continue;\n      }\n\n      if (i > 0) {\n        // Removing the starting slashes for each component but the first.\n        component = component.replace(/^[\\/]+/, '');\n      }\n\n      if (i < strArray.length - 1) {\n        // Removing the ending slashes for each component but the last.\n        component = component.replace(/[\\/]+$/, '');\n      } else {\n        // For the last component we will combine multiple slashes to a single one.\n        component = component.replace(/[\\/]+$/, '/');\n      }\n\n      resultArray.push(component);\n    }\n\n    var str = resultArray.join('/'); // Each input component is now separated by a single slash except the possible first plain protocol part.\n    // remove trailing slash before parameters or hash\n\n    str = str.replace(/\\/(\\?|&|#[^!])/g, '$1'); // replace ? in parameters with &\n\n    var parts = str.split('?');\n    str = parts.shift() + (parts.length > 0 ? '?' : '') + parts.join('&');\n    return str;\n  }\n\n  return function () {\n    var input;\n\n    if (typeof arguments[0] === 'object') {\n      input = arguments[0];\n    } else {\n      input = [].slice.call(arguments);\n    }\n\n    return normalize(input);\n  };\n});","export default __webpack_public_path__ + \"static/Default-OG-Image-7c01682d56d1f4dd9b6281175bb19587.png\";","import React, { Component } from \"react\";\nimport Helmet from \"react-helmet\";\nimport urljoin from \"url-join\";\nimport config from \"../../../data/SiteConfig\";\nimport defaultOG from \"../../images/Default-OG-Image.png\"\n\nclass SEO extends Component {\n  render() {\n    const { postNode, postPath, postSEO } = this.props;\n    let title;\n    let Name;\n    let description;\n    let image;\n    let postURL;\n    let author;\n    let postMeta;\n    let ogImage\n    if (postSEO) {\n      postMeta = postNode.data;\n      ({ Name } = postMeta);\n      image = postMeta.image ? postMeta.image[0].url : \"\";\n      postURL = urljoin(config.siteUrl, config.pathPrefix, postPath);\n    } else {\n      title = config.siteTitle;\n      description = config.siteDescription;\n      ogImage = defaultOG;\n      image = config.siteLogo;\n    }\n\n    if(image && image.indexOf(\"http\") == -1) image = urljoin(config.siteUrl, config.pathPrefix, image);\n    const blogURL = urljoin(config.siteUrl, config.pathPrefix);\n    const schemaOrgJSONLD = [\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"WebSite\",\n        url: blogURL,\n        name: title,\n        alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\"\n      }\n    ];\n    if (postSEO) {\n      schemaOrgJSONLD.push(\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          itemListElement: [\n            {\n              \"@type\": \"ListItem\",\n              position: 1,\n              item: {\n                \"@id\": postURL,\n                name: title,\n                image\n              }\n            }\n          ]\n        },\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BlogPosting\",\n          url: blogURL,\n          name: title,\n          alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\",\n          headline: title,\n          image: {\n            \"@type\": \"ImageObject\",\n            url: image\n          },\n          description\n        }\n      );\n    }\n    return (\n      <Helmet>\n        {/* General tags */}\n        <title>{Name + (postMeta?.Venues[0] ? \" @ \"+postMeta.Venues[0].data.Name : \"\")  + (postMeta?.Venues[0] ? \", \"+postMeta.Venues[0].data.City + \", CO\" : \"\") + ` | ${config.siteTitle}`}</title>\n        <meta name=\"description\" content={description} />\n        <meta name=\"image\" content={image} />\n\n        {/* Schema.org tags */}\n        <script type=\"application/ld+json\">\n          {JSON.stringify(schemaOrgJSONLD)}\n        </script>\n\n        {/* OpenGraph tags */}\n        <meta property=\"og:url\" content={postSEO ? postURL : blogURL} />\n        {postSEO ? <meta property=\"og:type\" content=\"article\" /> : null}\n        <meta property=\"og:title\" content={title} />\n        <meta property=\"og:description\" content={description} />\n        <meta property=\"og:image\" content={ogImage ? ogImage : image} />\n        <meta\n          property=\"fb:app_id\"\n          content={config.siteFBAppID ? config.siteFBAppID : \"\"}\n        />\n\n        {/* Twitter Card tags */}\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta\n          name=\"twitter:creator\"\n          content={author && author.twitter ? author.twitter : \"\"}\n        />\n        <meta name=\"twitter:title\" content={title} />\n        <meta name=\"twitter:description\" content={description} />\n        <meta name=\"twitter:image\" content={ogImage ? ogImage : image} />\n      </Helmet>\n    );\n  }\n}\n\nexport default SEO;\n","import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../layout\";\n\nimport SEO from \"../components/SEO/SEO\";\nimport config from \"../../data/SiteConfig\";\nimport ForecastGrid from \"../components/ForecastGrid/ForecastGrid\";\n\nclass Index extends React.Component {\n  render() {\n    const postEdges = this.props.data.allAirtable.edges;\n    console.log({context: this.props.pageContext});\n    console.log({postEdges});\n    return (\n      <Layout>\n        <div className=\"index-container\">\n          <SEO />\n          <Helmet title={config.siteTitle} />\n          <ForecastGrid daysToShow={30} postEdges={postEdges} showButton={false} />\n        </div>\n      </Layout>\n    );\n  }\n}\n\nexport default Index;\n\n/* eslint no-undef: \"off\" */\nexport const pageQuery = graphql`\nquery IndexQuery($today: Date!) {\n  allAirtable(\n    limit: 2000\n    sort: {fields: [data___StartDate, data___Featured], order: [ASC, DESC]}\n    filter: {data: {Status: {eq: \"Published\"}, StartDate: {lte: $today}}}\n  ) {\n    edges {\n      node {\n        fields{\n          slug\n        }\n        data {\n          StartDate\n          EndDate\n          DoorsTime\n          Name\n          Subtitle\n          Description\n          Tags\n          Featured\n          TicketURL\n          SoldOut\n          Image{\n            url\n          }\n          Artist_Genres\n          Venues {\n            fields{\n              slug\n            }\n            data {\n              Name\n              City\n            }\n          }\n        }\n      }\n    }\n  }\n}\n`;\n"],"names":["normalize","strArray","resultArray","length","TypeError","match","first","shift","replace","i","component","push","str","join","parts","split","arguments","slice","call","module","exports","definition","SEO","render","title","Name","description","image","postURL","postMeta","ogImage","this","props","postNode","postPath","postSEO","data","url","urljoin","config","defaultOG","indexOf","blogURL","schemaOrgJSONLD","name","alternateName","itemListElement","position","item","headline","Helmet","Venues","City","content","type","JSON","stringify","property","Component","Index","postEdges","allAirtable","edges","console","log","context","pageContext","className","daysToShow","showButton","React"],"sourceRoot":""}