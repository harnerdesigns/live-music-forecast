{"version":3,"file":"component---src-templates-artists-jsx-b792a1e76f03ee416226.js","mappings":"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","sources":["webpack://colorado-live-music-dir/./src/components/ArtistCard/ArtistCard.jsx","webpack://colorado-live-music-dir/./src/components/ArtistsGrid/ArtistsGrid.jsx","webpack://colorado-live-music-dir/./src/components/EventCard/EventCard.jsx","webpack://colorado-live-music-dir/./src/components/Pages/PageTitle/PageTitle.jsx","webpack://colorado-live-music-dir/./src/components/Pagination/LetterPagination.jsx","webpack://colorado-live-music-dir/./src/templates/artists.jsx","webpack://colorado-live-music-dir/./node_modules/lodash/kebabCase.js"],"sourcesContent":["import React from \"react\";\nimport { Link } from \"gatsby\";\nimport \"./ArtistCard.scss\";\nimport _ from \"lodash\";\n\nconst ArtistCard = ({ artist, large = false }) => {\n\n  return (\n    <Link\n      to={artist.fields.slug}\n      className={\"artist__card \" + (large ? \"artist__card--large\" : null)}\n    >\n      {artist.data.Image && (\n        <div className=\"artist__image-wrapper\">\n          <img className=\"artist__image\" src={artist.data.Image[0].url} />\n        </div>\n      )}\n      <div>\n        <h4 className=\"artist__name\">{artist.data.Name}</h4>\n        {large && artist.data.Bio && (\n          <div\n            className=\"aritst__bio\"\n            dangerouslySetInnerHTML={{ __html: artist.data.Bio }}\n          ></div>\n        )}\n        {large &&\n          artist.data.GenresRec &&\n          artist.data.GenresRec.map((genre, i) => {\n            return (\n              <React.Fragment key={i}><Link to={\"/browse/genres/\" + _.kebabCase(genre.data.Name)}>\n                {genre.data.Name}\n              </Link>\n              {i < artist.data.GenresRec.length - 1 ? \", \" : \"\"}\n              </React.Fragment>\n            );\n          })}\n      </div>\n    </Link>\n  );\n};\n\nexport default ArtistCard;\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport \"./ArtistsGrid.scss\";\nimport _ from \"lodash\";\nimport EventCard from \"../EventCard/EventCard\";\nimport ArtistCard from \"../ArtistCard/ArtistCard\";\n\nconst ArtistsGrid = ({ artists }) => {\n\n  let artistMap = artists.map((artist, i) => {\n    if (artist.node) {\n      artist = artist.node;\n    }\n    return <ArtistCard key={i} artist={artist} />;\n  });\n\n  return (\n    <section className={\"artist__grid\"}>\n      {artistMap}\n    </section>\n  );\n};\n\nexport default ArtistsGrid;\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport \"./EventCard.scss\";\nimport moment from \"moment\";\nimport Slider from \"react-slick\";\nimport _ from \"lodash\";\nimport { FontAwesomeIcon } from \"../../../node_modules/@fortawesome/react-fontawesome/index\";\n\nimport GrayCo from \"../../images/gray-co.svg\";\n\nimport genreIcons from \"../genre-icons\";\n\nconst EventCard = ({\n  event,\n  showImage = true,\n  showDate = false,\n  showTicket = false,\n  showLink = true,\n  featured = false,\n}) => {\n  let eventData = event.data;\n\n  var formatter = new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\",\n\n    // These options are needed to round to whole numbers if that's what you want.\n    //minimumFractionDigits: 0, // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)\n    //maximumFractionDigits: 0, // (causes 2500.99 to be printed as $2,501)\n  });\n  var settings = {\n    dots: false,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    arrows: false,\n    autoplay: true,\n  };\n\n  return (\n    <div\n      key={eventData.Name}\n      className={\n        \"event__card\" +\n        (eventData.Featured || featured ? \" event__card--featured\" : \"\")\n      }\n    >\n      {showLink && (\n        <Link\n          className=\"event__link\"\n          to={event.fields.slug}\n          key={eventData.Name}\n        />\n      )}\n      {showImage && eventData.Image && eventData.Featured && (\n        <Slider {...settings}>\n          {eventData.Image.map((Image, i) => (\n            <div key={i} className=\"event__image-wrapper\">\n              <img className=\"event__image\" src={Image.url} />\n            </div>\n          ))}\n        </Slider>\n      )}\n\n      {showImage && eventData.Image && !eventData.Featured && (\n        <div className=\"event__image-wrapper\">\n          <img className=\"event__image\" src={eventData.Image[0].url} />\n        </div>\n      )}\n\n      {showImage && !eventData.Image && (\n        <div className=\"event__image-wrapper\">\n          <img className=\"event__image\" src={GrayCo} />\n        </div>\n      )}\n\n      <div className=\"event__card-heading\">\n        <h2 className=\"event__name\">{eventData.Name}</h2>\n        {eventData.Subtitle && (\n          <h3 className=\"event__subtitle\">{eventData.Subtitle}</h3>\n        )}\n\n        <h4 className=\"event__time-wrapper\">\n          {moment(eventData.StartDate).format(\n            showDate ? \"MM/DD/YYYY @ h:mm A\" : \"h:mm A\"\n          )}{\" \"}\n          {eventData.DoorsTime &&\n            \"| Doors @ \" + moment(eventData.DoorsTime).format(\"h:mm A\")}\n          {eventData.Venues && (\n            <>\n              {showDate ? \" - \" : \" @ \"}\n              <Link\n                className=\"event__venue-name\"\n                to={eventData.Venues[0].fields.slug}\n              >\n                {eventData.Venues[0].data.Name}\n              </Link>\n            </>\n          )}\n        </h4>\n      </div>\n\n      <div className=\"event__meta-wrapper\">\n        {eventData.SoldOut && (\n          <div className=\"event__tag event__tag--sold-out\">\n            <FontAwesomeIcon fixedWidth icon=\"ban\" />\n            Sold Out\n          </div>\n        )}\n        {eventData.Venues && (\n          <Link\n            to={`/browse/${_.kebabCase(eventData.Venues[0].data.City)}`}\n            className=\"event__tag event__city\"\n          >\n            <FontAwesomeIcon fixedWidth icon=\"map-marker-alt\" />\n            {eventData.Venues[0].data.City}\n          </Link>\n        )}\n\n        {eventData.Tags &&\n          eventData.Tags.map((tag) => {\n            return (\n              <div key={_.camelCase(tag)} className={\"event__tag event__tag--\" + _.camelCase(tag)}>\n                <FontAwesomeIcon fixedWidth icon={genreIcons[tag] || \"tag\"} />\n\n                {tag}\n              </div>\n            );\n          })}\n\n        {eventData.Genres &&\n          eventData.Genres.map((genre, index) => {\n            if (index > 2) {\n              return (\n                <Link\n                key={_.camelCase(genre)}\n                  to={`/browse/genres/${genre}`}\n                  className={\"event__tag event__tag--\" + _.camelCase(genre)}\n                >\n                  <FontAwesomeIcon\n                    fixedWidth\n                    icon={genreIcons[genre] || \"music\"}\n                  />\n                  {genre}\n                </Link>\n              );\n            }\n          })}\n        {eventData.Artist_Genres &&\n          eventData.Artist_Genres.map((genre, index) => {\n            if (index < 2) {\n              return (\n                <Link\n                  to={`/browse/genres/${_.kebabCase(genre)}`}\n                  className={\"event__tag event__tag--\" + _.camelCase(genre)}\n                  key={_.camelCase(genre)}\n                >\n                  <FontAwesomeIcon\n                    fixedWidth\n                    icon={genreIcons[genre] || \"music\"}\n                  />\n                  {genre}\n                </Link>\n              );\n            }\n          })}\n      </div>\n\n      {(eventData.Featured || showTicket) &&\n        !eventData.SoldOut &&\n        eventData.TicketURL && (\n          <a\n            href={eventData.TicketURL}\n            target=\"_blank\"\n            rel=\"noreferrer noopener\"\n            className=\"button event__ticket-button\"\n          >\n            Buy Tickets{\" \"}\n            {eventData.Price &&\n              `(${\n                !isNaN(parseFloat(eventData.Price))\n                  ? formatter.format(parseFloat(eventData.Price))\n                  : eventData.Price\n              }${eventData.PriceRange ? \"+\" : \"\"})`}\n            <FontAwesomeIcon icon=\"external-link-alt\" />\n          </a>\n        )}\n    </div>\n  );\n};\n\nexport default EventCard;\n","import React from \"react\";\nimport \"./PageTitle.scss\";\nimport BlueBorder from \"../../../images/blue-border.svg\";\nimport { Link } from \"gatsby\";\n\nconst PageTitle = ({ title, subtitle, logo, accentColor, className, children }) => {\n\n    return(\n        <header className={\"page-title__wrapper\" + (logo ? \" has-logo\" : \"\") + \" \" + className}>\n            {logo && <img style={{backgroundColor: accentColor}} className=\"page-title__logo\" src={logo} />}\n            <div className=\"page-title__content\">\n\n            {title && <h1>{title}</h1>}\n            {subtitle && <h2>{subtitle}</h2>}\n            {children}\n            </div>\n        </header>\n    )\n};\nexport default PageTitle;\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport \"./Pagination.scss\";\n\nimport _ from \"lodash\";\nimport { FontAwesomeIcon } from \"../../../node_modules/@fortawesome/react-fontawesome/index\";\n\nconst LetterPagination = ({ currentLetter, nextLetter, prevLetter, totalPages, urlBase }) => {\n  return (\n    <div className=\"pagination__wrapper\">\n      {prevLetter ? (\n        <Link\n          className=\"pagination__button pagination__button--prev\"\n          to={urlBase + `/${prevLetter}`}\n        >\n          <FontAwesomeIcon icon=\"arrow-left\" />\n        </Link>\n      ) : null}\n            <span className=\"pagination__label\">\n        {currentLetter  && `Page ${currentLetter}`}\n      </span>\n      {nextLetter && (\n        <Link\n          className=\"pagination__button pagination__button--next\"\n          to={urlBase + `/${nextLetter}`}\n        >\n          <FontAwesomeIcon icon=\"arrow-right\" />\n        </Link>\n      )}\n    </div>\n  );\n};\n\nexport default LetterPagination;\n","import React, { Component } from \"react\";\nimport Helmet from \"react-helmet\";\nimport Layout from \"../layout\";\nimport config from \"../../data/SiteConfig\";\nimport PageTitle from \"../components/Pages/PageTitle/PageTitle\";\nimport { graphql, Link } from \"gatsby\";\n\nimport ArtistsGrid from \"../components/ArtistsGrid/ArtistsGrid\";\nimport LetterPagination from \"../components/Pagination/LetterPagination\";\nimport { FontAwesomeIcon } from \"../../node_modules/@fortawesome/react-fontawesome/index\";\nconst ArtistsPage = ({ data, pageContext }) => {\n  const pageArtists = data.page.edges;\n  const featuredArtists = data.featured.edges;\n  const indieArtists = data.indie.edges;\n\n  let letterLinkList = pageContext.letters.map((letter, i) => {\n    return (\n      \n        <a\n        key={letter}\n          className={\n            \"letter\" +\n            (letter === pageContext.currentLetter || (letter == \"#\" && \"Other\" == pageContext.currentLetter) ? \" letter--active\" : \"\")\n          }\n          href={\"/artists/\" + (letter !== \"#\" ? letter : \"other\")}\n        >\n          {letter}\n        </a>\n\n    );\n  });\n\n  return (\n    <Layout>\n      <main className=\"browse__container\">\n        <Helmet title={`CO Live Music Artist Database | ${config.siteTitle}`} />\n        <PageTitle\n          title={\n            pageContext.currentLetter\n              ? \"Artists Starting With \" + pageContext.currentLetter\n              : \"Artists Database\"\n          }\n          subtitle={\n            !pageContext.currentLetter &&\n            \"All The Cool Artists Coming to Colorado\"\n          }\n        />\n        <div className=\"letter-link-list\">\n          Search By Letter: {letterLinkList}\n        </div>\n        {pageContext.currentLetter ? (\n          <ArtistsGrid artists={pageArtists} />\n        ) : (\n          <>\n            {\" \"}\n            <PageTitle subtitle={\"Smaller Artists With Shows Scheduled\"} />\n            <ArtistsGrid artists={indieArtists} />\n            <PageTitle subtitle={\"Top Artists With Shows Scheduled\"} />\n            <ArtistsGrid artists={featuredArtists} />{\" \"}\n          </>\n        )}\n        {pageContext.currentLetter && (\n          <LetterPagination\n            totalPages={pageContext.totalPages}\n            nextLetter={pageContext.nextLetter}\n            prevLetter={pageContext.prevLetter}\n            currentLetter={pageContext.currentLetter}\n            urlBase=\"/artists\"\n          />\n        )}\n      </main>\n    </Layout>\n  );\n};\n\nexport default ArtistsPage;\n\nexport const pageQuery = graphql`\n  query ArtistsQuery($currentLetterFilter: String) {\n    page: allAirtable(\n      sort: { fields: [data___Name], order: ASC }\n      filter: {\n        table: { eq: \"Artists\" }\n        data: { Name: { regex: $currentLetterFilter }, EventCount: {gt: 0} }\n      }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          data {\n            Name\n            SpotifyID\n            SpotifyURL\n            Bio\n            Twitter\n            Instagram\n            Facebook\n            Soundcloud\n            GenresRec {\n              data {\n                Name\n              }\n            }\n            Image {\n              url\n            }\n          }\n        }\n      }\n    }\n    featured: allAirtable(\n      limit: 12\n      sort: { fields: [data___SpotifyFollowers], order: DESC }\n      filter: {\n        table: { eq: \"Artists\" }\n        data: { SpotifyFollowers: { gt: 1 }, EventCount: { gte: 1 } }\n      }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          data {\n            Name\n            SpotifyID\n            SpotifyURL\n            Bio\n            Twitter\n            Instagram\n            Facebook\n            Soundcloud\n            GenresRec {\n              data {\n                Name\n              }\n            }\n            Image {\n              url\n            }\n          }\n        }\n      }\n    }\n\n    indie: allAirtable(\n      limit: 12\n      sort: { fields: [data___SpotifyFollowers], order: ASC }\n      filter: {\n        table: { eq: \"Artists\" }\n        data: { SpotifyFollowers: { gt: 1 }, EventCount: { gte: 1 } }\n      }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          data {\n            Name\n            SpotifyID\n            SpotifyURL\n            Bio\n            Twitter\n            Instagram\n            Facebook\n            Soundcloud\n            GenresRec {\n              data {\n                Name\n              }\n            }\n            Image {\n              url\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","var createCompounder = require('./_createCompounder');\n\n/**\n * Converts `string` to\n * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the kebab cased string.\n * @example\n *\n * _.kebabCase('Foo Bar');\n * // => 'foo-bar'\n *\n * _.kebabCase('fooBar');\n * // => 'foo-bar'\n *\n * _.kebabCase('__FOO_BAR__');\n * // => 'foo-bar'\n */\nvar kebabCase = createCompounder(function(result, word, index) {\n  return result + (index ? '-' : '') + word.toLowerCase();\n});\n\nmodule.exports = kebabCase;\n"],"names":["artist","large","Link","to","fields","slug","className","data","Image","src","url","Name","Bio","dangerouslySetInnerHTML","__html","GenresRec","map","genre","i","key","length","artistMap","artists","node","event","showImage","showDate","showTicket","showLink","featured","eventData","formatter","Intl","NumberFormat","style","currency","settings","dots","infinite","speed","slidesToShow","slidesToScroll","arrows","autoplay","Featured","GrayCo","Subtitle","moment","StartDate","format","DoorsTime","Venues","SoldOut","FontAwesomeIcon","fixedWidth","icon","City","Tags","tag","genreIcons","Genres","index","Artist_Genres","TicketURL","href","target","rel","Price","isNaN","parseFloat","PriceRange","title","subtitle","logo","accentColor","children","backgroundColor","currentLetter","nextLetter","prevLetter","urlBase","totalPages","pageContext","pageArtists","page","edges","featuredArtists","indieArtists","indie","letterLinkList","letters","letter","Helmet","config","PageTitle","ArtistsGrid","kebabCase","createCompounder","result","word","toLowerCase","module","exports"],"sourceRoot":""}