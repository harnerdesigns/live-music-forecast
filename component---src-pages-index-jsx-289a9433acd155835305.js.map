{"version":3,"file":"component---src-pages-index-jsx-289a9433acd155835305.js","mappings":"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","sources":["webpack://colorado-live-music-dir/./node_modules/url-join/lib/url-join.js","webpack://colorado-live-music-dir/./src/components/EventCard/EventCard.jsx","webpack://colorado-live-music-dir/./src/components/ForecastGrid/ForecastGrid.jsx","webpack://colorado-live-music-dir/./src/components/SEO/SEO.jsx","webpack://colorado-live-music-dir/./src/pages/index.jsx","webpack://colorado-live-music-dir/./node_modules/lodash/kebabCase.js"],"sourcesContent":["(function (name, context, definition) {\n  if (typeof module !== 'undefined' && module.exports) module.exports = definition();else if (typeof define === 'function' && define.amd) define(definition);else context[name] = definition();\n})('urljoin', this, function () {\n  function normalize(strArray) {\n    var resultArray = [];\n\n    if (strArray.length === 0) {\n      return '';\n    }\n\n    if (typeof strArray[0] !== 'string') {\n      throw new TypeError('Url must be a string. Received ' + strArray[0]);\n    } // If the first part is a plain protocol, we combine it with the next part.\n\n\n    if (strArray[0].match(/^[^/:]+:\\/*$/) && strArray.length > 1) {\n      var first = strArray.shift();\n      strArray[0] = first + strArray[0];\n    } // There must be two or three slashes in the file protocol, two slashes in anything else.\n\n\n    if (strArray[0].match(/^file:\\/\\/\\//)) {\n      strArray[0] = strArray[0].replace(/^([^/:]+):\\/*/, '$1:///');\n    } else {\n      strArray[0] = strArray[0].replace(/^([^/:]+):\\/*/, '$1://');\n    }\n\n    for (var i = 0; i < strArray.length; i++) {\n      var component = strArray[i];\n\n      if (typeof component !== 'string') {\n        throw new TypeError('Url must be a string. Received ' + component);\n      }\n\n      if (component === '') {\n        continue;\n      }\n\n      if (i > 0) {\n        // Removing the starting slashes for each component but the first.\n        component = component.replace(/^[\\/]+/, '');\n      }\n\n      if (i < strArray.length - 1) {\n        // Removing the ending slashes for each component but the last.\n        component = component.replace(/[\\/]+$/, '');\n      } else {\n        // For the last component we will combine multiple slashes to a single one.\n        component = component.replace(/[\\/]+$/, '/');\n      }\n\n      resultArray.push(component);\n    }\n\n    var str = resultArray.join('/'); // Each input component is now separated by a single slash except the possible first plain protocol part.\n    // remove trailing slash before parameters or hash\n\n    str = str.replace(/\\/(\\?|&|#[^!])/g, '$1'); // replace ? in parameters with &\n\n    var parts = str.split('?');\n    str = parts.shift() + (parts.length > 0 ? '?' : '') + parts.join('&');\n    return str;\n  }\n\n  return function () {\n    var input;\n\n    if (typeof arguments[0] === 'object') {\n      input = arguments[0];\n    } else {\n      input = [].slice.call(arguments);\n    }\n\n    return normalize(input);\n  };\n});","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport \"./EventCard.scss\";\nimport moment from \"moment\";\nimport Slider from \"react-slick\";\nimport _ from \"lodash\";\nimport { FontAwesomeIcon } from \"../../../node_modules/@fortawesome/react-fontawesome/index\";\n\nimport GrayCo from \"../../images/gray-co.svg\";\n\nimport genreIcons from \"../genre-icons\";\n\nconst EventCard = ({\n  event,\n  showImage = true,\n  showDate = false,\n  showTicket = false,\n  showLink = true,\n  featured = false,\n}) => {\n  let eventData = event.data;\n\n  var formatter = new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\",\n\n    // These options are needed to round to whole numbers if that's what you want.\n    //minimumFractionDigits: 0, // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)\n    //maximumFractionDigits: 0, // (causes 2500.99 to be printed as $2,501)\n  });\n  var settings = {\n    dots: false,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    arrows: false,\n    autoplay: true,\n  };\n\n  return (\n    <div\n      key={eventData.Name}\n      className={\n        \"event__card\" +\n        (eventData.Featured || featured ? \" event__card--featured\" : \"\")\n      }\n    >\n      {showLink && (\n        <Link\n          className=\"event__link\"\n          to={event.fields.slug}\n          key={eventData.Name}\n        />\n      )}\n      {showImage && eventData.Image && eventData.Featured && (\n        <Slider {...settings}>\n          {eventData.Image.map((Image) => (\n            <div className=\"event__image-wrapper\">\n              <img className=\"event__image\" src={Image.url} />\n            </div>\n          ))}\n        </Slider>\n      )}\n\n      {showImage && eventData.Image && !eventData.Featured && (\n        <div className=\"event__image-wrapper\">\n          <img className=\"event__image\" src={eventData.Image[0].url} />\n        </div>\n      )}\n\n      {showImage && !eventData.Image && (\n        <div className=\"event__image-wrapper\">\n          <img className=\"event__image\" src={GrayCo} />\n        </div>\n      )}\n\n      <div className=\"event__card-heading\">\n        <h2 className=\"event__name\">{eventData.Name}</h2>\n        {eventData.Subtitle && (\n          <h3 className=\"event__subtitle\">{eventData.Subtitle}</h3>\n        )}\n\n          <h4 className=\"event__time-wrapper\">\n            {moment(eventData.StartDate).format(\n              showDate ? \"MM/DD/YYYY @ h:mm A\" : \"h:mm A\"\n            )}{\" \"}\n            {eventData.DoorsTime &&\n              \"| Doors @ \" + moment(eventData.DoorsTime).format(\"h:mm A\")}\n          {eventData.Venues && (\n            <Link className=\"event__venue-name\" to={eventData.Venues[0].fields.slug}>\n                 {(showDate ? '-' : '@')} {eventData.Venues[0].data.Name}\n            </Link>\n          )}\n          </h4>\n      </div>\n\n      <div className=\"event__meta-wrapper\">\n        {eventData.SoldOut && (\n          <div class=\"event__tag event__tag--sold-out\">\n            <FontAwesomeIcon fixedWidth icon=\"ban\" />\n            Sold Out\n          </div>\n        )}\n        {eventData.Venues && (\n          <Link\n            to={`/browse/${_.kebabCase(eventData.Venues[0].data.City)}`}\n            className=\"event__tag event__city\"\n          >\n            <FontAwesomeIcon fixedWidth icon=\"map-marker-alt\" />\n            {eventData.Venues[0].data.City}\n          </Link>\n        )}\n\n        {eventData.Tags &&\n          eventData.Tags.map((tag) => {\n            return (\n              <div className={\"event__tag event__tag--\" + _.camelCase(tag)}>\n                <FontAwesomeIcon fixedWidth icon={genreIcons[tag] || \"tag\"} />\n\n                {tag}\n              </div>\n            );\n          })}\n\n        {eventData.Genres &&\n          eventData.Genres.map((genre, index) => {\n            if (index > 2) {\n              return (\n                <Link\n                  to={`/browse/genres/${genre}`}\n                  className={\"event__tag event__tag--\" + _.camelCase(genre)}\n                >\n                  <FontAwesomeIcon\n                    fixedWidth\n                    icon={genreIcons[genre] || \"music\"}\n                  />\n                  {genre}\n                </Link>\n              );\n            }\n          })}\n        {eventData.Artist_Genres &&\n          eventData.Artist_Genres.map((genre, index) => {\n            if (index < 2) {\n              return (\n                <Link\n                  to={`/browse/genres/${_.kebabCase(genre)}`}\n                  className={\"event__tag event__tag--\" + _.camelCase(genre)}\n                >\n                  <FontAwesomeIcon\n                    fixedWidth\n                    icon={genreIcons[genre] || \"music\"}\n                  />\n                  {genre}\n                </Link>\n              );\n            }\n          })}\n      </div>\n\n      {(eventData.Featured || showTicket) &&\n        !eventData.SoldOut &&\n        eventData.TicketURL && (\n          <a\n            href={eventData.TicketURL}\n            target=\"_blank\"\n            rel=\"noreferrer noopener\"\n            className=\"button event__ticket-button\"\n          >\n            Buy Tickets{\" \"}\n            {eventData.Price &&\n              `(${\n                !isNaN(parseFloat(eventData.Price))\n                  ? formatter.format(parseFloat(eventData.Price))\n                  : eventData.Price\n              }${eventData.PriceRange ? \"+\" : \"\"})`}\n            <FontAwesomeIcon icon=\"external-link-alt\" />\n          </a>\n        )}\n    </div>\n  );\n};\n\nexport default EventCard;\n","import React, {useState} from \"react\";\nimport { Link } from \"gatsby\";\nimport \"./ForecastGrid.scss\";\nimport moment from \"moment\";\nimport siteConfig from \"../../../data/SiteConfig\";\nimport EventCard from \"../EventCard/EventCard\";\nimport { FontAwesomeIcon } from \"../../../node_modules/@fortawesome/react-fontawesome/index\";\nimport { isSet } from \"lodash\";\nimport NewsletterSignup from \"../NewsletterSignup/NewsletterSignup\";\n\nconst getPostList = (postEdges) => {\n  const postList = [];\n\n  postEdges.forEach((postEdge) => {\n    if (\n      postList[\n        moment(postEdge.node.data.StartDate).format(siteConfig.dateFormat)\n      ]\n    ) {\n      postList[\n        moment(postEdge.node.data.StartDate).format(siteConfig.dateFormat)\n      ].push(postEdge);\n    } else {\n      postList[\n        moment(postEdge.node.data.StartDate).format(siteConfig.dateFormat)\n      ] = [postEdge];\n    }\n  });\n  console.log({ postList });\n\n  return postList;\n};\n\nconst ForecastGrid = ({ showButton, postEdges, daysToShow, city }) => {\n  const postList = getPostList(postEdges);\n  const today = moment(new Date());\n\n\n\n\n  let dayArray = [\n    {\n      date: today.format(siteConfig.dateFormat),\n      shortDate: today.format('MM/DD'),\n      shortDay: \"Today\",\n      longDay: \"Today\",\n    },\n  ];\n\n  let tomorrow = today.add(1, \"days\");\n\n  dayArray.push({\n    date: tomorrow.format(siteConfig.dateFormat),\n    shortDate: tomorrow.format('MM/DD'),\n    shortDay: \"Tomorrow\",\n    longDay: \"Tomorrow\",\n\n  });\n\n  for (let i = 0; i < daysToShow - 1; i++) {\n    let newDay = today.add(1, \"days\");\n    dayArray.push({\n      date: newDay.format(siteConfig.dateFormat),\n      shortDate: newDay.format('MM/DD'),\n      shortDay: newDay.format(\"ddd\"),\n      longDay: newDay.format(\"dddd\"),\n    });\n  }\n\n\n  return (\n    <section className=\"forecast__grid\">\n      <div className=\"forecast__header\">\n        <span className=\"forecast__title\">\n          {city ? city + \"'s\" : \"Colorado's\"} {daysToShow} Day Live Music\n          Forecast:\n        </span>\n      </div>\n      {dayArray.map((day, i) => (\n        <>\n          <ForecastDay day={day} postList={postList} />\n          {i == 5 ? <NewsletterSignup /> : null}\n        </>\n      ))}\n      {showButton ? (\n        <Link to=\"/calendar\" className=\"calendar-link\">\n          <span className=\"calendar-link__content\">\n            <FontAwesomeIcon icon=\"calendar\" />\n            See The Whole Calendar &raquo;\n          </span>\n        </Link>\n      ) : null}\n    </section>\n  );\n};\n\nexport default ForecastGrid;\n\n\nconst ForecastDay = ({day, postList}) => {\n  const [dayOpen, setDayOpen] = useState(day.shortDay == \"Today\");\n\n  return(\n    <div className={\"forecast__day\" + ` forecast__day--${day.shortDay}` + (dayOpen  ? \" forecast__day--open\" : \"\")}>\n    <div className=\"forecast__meta\" onClick={()=>{setDayOpen(!dayOpen)}}>\n      <h1>{day.longDay}</h1>\n      <h2>{day.shortDate}</h2>\n      <FontAwesomeIcon className=\"forecast__caret\" icon={dayOpen ? 'caret-down' : 'caret-up'} />\n    </div>\n    <div className=\"forecast__scroller\">\n      {\n        /* Your post list here. */\n        postList[day.date] ? (\n          postList[day.date].map((day) => (\n            <EventCard event={day.node} />\n          ))\n        ) : (\n          <h4 className=\"empty-day\">\n            😢\n            <br /> Nothing {day.longDay}\n          </h4>\n        )\n      }\n    </div>\n  </div>\n  )\n}","import React, { Component } from \"react\";\nimport Helmet from \"react-helmet\";\nimport urljoin from \"url-join\";\nimport config from \"../../../data/SiteConfig\";\n\nclass SEO extends Component {\n  render() {\n    const { postNode, postPath, postSEO } = this.props;\n    let title;\n    let Name;\n    let description;\n    let image;\n    let postURL;\n    let author;\n    let postMeta\n    if (postSEO) {\n      postMeta = postNode.data;\n      ({ Name } = postMeta);\n      image = postMeta.image ? postMeta.image[0].url : \"\";\n      postURL = urljoin(config.siteUrl, config.pathPrefix, postPath);\n    } else {\n      title = config.siteTitle;\n      description = config.siteDescription;\n      image = config.siteLogo;\n    }\n\n    if(image && image.indexOf(\"http\") == -1) image = urljoin(config.siteUrl, config.pathPrefix, image);\n    const blogURL = urljoin(config.siteUrl, config.pathPrefix);\n    const schemaOrgJSONLD = [\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"WebSite\",\n        url: blogURL,\n        name: title,\n        alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\"\n      }\n    ];\n    if (postSEO) {\n      schemaOrgJSONLD.push(\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          itemListElement: [\n            {\n              \"@type\": \"ListItem\",\n              position: 1,\n              item: {\n                \"@id\": postURL,\n                name: title,\n                image\n              }\n            }\n          ]\n        },\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BlogPosting\",\n          url: blogURL,\n          name: title,\n          alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\",\n          headline: title,\n          image: {\n            \"@type\": \"ImageObject\",\n            url: image\n          },\n          description\n        }\n      );\n    }\n    return (\n      <Helmet>\n        {/* General tags */}\n        <title>{Name + (postMeta?.Venues[0] ? \" @ \"+postMeta.Venues[0].data.Name : \"\")  + (postMeta?.Venues[0] ? \", \"+postMeta.Venues[0].data.City + \", CO\" : \"\") + ` | ${config.siteTitle}`}</title>\n        <meta name=\"description\" content={description} />\n        <meta name=\"image\" content={image} />\n\n        {/* Schema.org tags */}\n        <script type=\"application/ld+json\">\n          {JSON.stringify(schemaOrgJSONLD)}\n        </script>\n\n        {/* OpenGraph tags */}\n        <meta property=\"og:url\" content={postSEO ? postURL : blogURL} />\n        {postSEO ? <meta property=\"og:type\" content=\"article\" /> : null}\n        <meta property=\"og:title\" content={title} />\n        <meta property=\"og:description\" content={description} />\n        <meta property=\"og:image\" content={image} />\n        <meta\n          property=\"fb:app_id\"\n          content={config.siteFBAppID ? config.siteFBAppID : \"\"}\n        />\n\n        {/* Twitter Card tags */}\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta\n          name=\"twitter:creator\"\n          content={author && author.twitter ? author.twitter : \"\"}\n        />\n        <meta name=\"twitter:title\" content={title} />\n        <meta name=\"twitter:description\" content={description} />\n        <meta name=\"twitter:image\" content={image} />\n      </Helmet>\n    );\n  }\n}\n\nexport default SEO;\n","import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../layout\";\n\nimport SEO from \"../components/SEO/SEO\";\nimport config from \"../../data/SiteConfig\";\nimport ForecastGrid from \"../components/ForecastGrid/ForecastGrid\";\n\nclass Index extends React.Component {\n  render() {\n    const postEdges = this.props.data.allAirtable.edges;\n    console.log({context: this.props.pageContext});\n    console.log({postEdges});\n    return (\n      <Layout>\n        <div className=\"index-container\">\n          <SEO />\n          <Helmet title={config.siteTitle} />\n          <ForecastGrid daysToShow={30} postEdges={postEdges} showButton={false} />\n        </div>\n      </Layout>\n    );\n  }\n}\n\nexport default Index;\n\n/* eslint no-undef: \"off\" */\nexport const pageQuery = graphql`\nquery IndexQuery($today: Date!) {\n  allAirtable(\n    limit: 2000\n    sort: {fields: [data___StartDate, data___Featured], order: [ASC, DESC]}\n    filter: {data: {Status: {eq: \"Published\"}, StartDate: {lte: $today}}}\n  ) {\n    edges {\n      node {\n        fields{\n          slug\n        }\n        data {\n          StartDate\n          EndDate\n          DoorsTime\n          Name\n          Subtitle\n          Description\n          Tags\n          Featured\n          TicketURL\n          SoldOut\n          Image{\n            url\n          }\n          Artist_Genres\n          Venues {\n            fields{\n              slug\n            }\n            data {\n              Name\n              City\n            }\n          }\n        }\n      }\n    }\n  }\n}\n`;\n","var createCompounder = require('./_createCompounder');\n\n/**\n * Converts `string` to\n * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the kebab cased string.\n * @example\n *\n * _.kebabCase('Foo Bar');\n * // => 'foo-bar'\n *\n * _.kebabCase('fooBar');\n * // => 'foo-bar'\n *\n * _.kebabCase('__FOO_BAR__');\n * // => 'foo-bar'\n */\nvar kebabCase = createCompounder(function(result, word, index) {\n  return result + (index ? '-' : '') + word.toLowerCase();\n});\n\nmodule.exports = kebabCase;\n"],"names":["normalize","strArray","resultArray","length","TypeError","match","first","shift","replace","i","component","push","str","join","parts","split","arguments","slice","call","module","exports","definition","event","showImage","showDate","showTicket","showLink","featured","eventData","data","formatter","Intl","NumberFormat","style","currency","settings","dots","infinite","speed","slidesToShow","slidesToScroll","arrows","autoplay","key","Name","className","Featured","Link","to","fields","slug","Image","map","src","url","GrayCo","Subtitle","moment","StartDate","format","DoorsTime","Venues","SoldOut","class","FontAwesomeIcon","fixedWidth","icon","City","Tags","tag","genreIcons","Genres","genre","index","Artist_Genres","TicketURL","href","target","rel","Price","isNaN","parseFloat","PriceRange","showButton","postEdges","daysToShow","city","postList","forEach","postEdge","node","siteConfig","console","log","getPostList","today","Date","dayArray","date","shortDate","shortDay","longDay","tomorrow","add","newDay","day","ForecastDay","useState","dayOpen","setDayOpen","onClick","SEO","render","title","description","image","postURL","postMeta","this","props","postNode","postPath","postSEO","urljoin","config","indexOf","blogURL","schemaOrgJSONLD","name","alternateName","itemListElement","position","item","headline","content","type","JSON","stringify","property","Component","Index","allAirtable","edges","context","pageContext","React","kebabCase","createCompounder","result","word","toLowerCase"],"sourceRoot":""}