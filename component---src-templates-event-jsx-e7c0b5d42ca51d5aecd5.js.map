{"version":3,"file":"component---src-templates-event-jsx-e7c0b5d42ca51d5aecd5.js","mappings":"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","sources":["webpack://colorado-live-music-dir/./node_modules/url-join/lib/url-join.js","webpack://colorado-live-music-dir/./src/components/ArtistsGrid/ArtistsGrid.jsx","webpack://colorado-live-music-dir/./src/images/Default-OG-Image.png","webpack://colorado-live-music-dir/./src/components/SEO/SEO.jsx","webpack://colorado-live-music-dir/./src/components/PostTags/PostTags.jsx","webpack://colorado-live-music-dir/./src/templates/event.jsx"],"sourcesContent":["(function (name, context, definition) {\n  if (typeof module !== 'undefined' && module.exports) module.exports = definition();else if (typeof define === 'function' && define.amd) define(definition);else context[name] = definition();\n})('urljoin', this, function () {\n  function normalize(strArray) {\n    var resultArray = [];\n\n    if (strArray.length === 0) {\n      return '';\n    }\n\n    if (typeof strArray[0] !== 'string') {\n      throw new TypeError('Url must be a string. Received ' + strArray[0]);\n    } // If the first part is a plain protocol, we combine it with the next part.\n\n\n    if (strArray[0].match(/^[^/:]+:\\/*$/) && strArray.length > 1) {\n      var first = strArray.shift();\n      strArray[0] = first + strArray[0];\n    } // There must be two or three slashes in the file protocol, two slashes in anything else.\n\n\n    if (strArray[0].match(/^file:\\/\\/\\//)) {\n      strArray[0] = strArray[0].replace(/^([^/:]+):\\/*/, '$1:///');\n    } else {\n      strArray[0] = strArray[0].replace(/^([^/:]+):\\/*/, '$1://');\n    }\n\n    for (var i = 0; i < strArray.length; i++) {\n      var component = strArray[i];\n\n      if (typeof component !== 'string') {\n        throw new TypeError('Url must be a string. Received ' + component);\n      }\n\n      if (component === '') {\n        continue;\n      }\n\n      if (i > 0) {\n        // Removing the starting slashes for each component but the first.\n        component = component.replace(/^[\\/]+/, '');\n      }\n\n      if (i < strArray.length - 1) {\n        // Removing the ending slashes for each component but the last.\n        component = component.replace(/[\\/]+$/, '');\n      } else {\n        // For the last component we will combine multiple slashes to a single one.\n        component = component.replace(/[\\/]+$/, '/');\n      }\n\n      resultArray.push(component);\n    }\n\n    var str = resultArray.join('/'); // Each input component is now separated by a single slash except the possible first plain protocol part.\n    // remove trailing slash before parameters or hash\n\n    str = str.replace(/\\/(\\?|&|#[^!])/g, '$1'); // replace ? in parameters with &\n\n    var parts = str.split('?');\n    str = parts.shift() + (parts.length > 0 ? '?' : '') + parts.join('&');\n    return str;\n  }\n\n  return function () {\n    var input;\n\n    if (typeof arguments[0] === 'object') {\n      input = arguments[0];\n    } else {\n      input = [].slice.call(arguments);\n    }\n\n    return normalize(input);\n  };\n});","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport \"./ArtistsGrid.scss\";\nimport _ from \"lodash\";\nimport EventCard from \"../EventCard/EventCard\";\nimport ArtistCard from \"../ArtistCard/ArtistCard\";\n\nconst ArtistsGrid = ({ artists }) => {\n  console.log({ artists });\n\n  let artistMap = artists.map((artist) => {\n    if (artist.node) {\n      artist = artist.node;\n    }\n    return <ArtistCard artist={artist} />;\n  });\n\n  return (\n    <section className={\"artist__grid\"}>\n      {artistMap}\n    </section>\n  );\n};\n\nexport default ArtistsGrid;\n","export default __webpack_public_path__ + \"static/Default-OG-Image-7c01682d56d1f4dd9b6281175bb19587.png\";","import React, { Component } from \"react\";\nimport Helmet from \"react-helmet\";\nimport urljoin from \"url-join\";\nimport config from \"../../../data/SiteConfig\";\nimport defaultOG from \"../../images/Default-OG-Image.png\"\n\nclass SEO extends Component {\n  render() {\n    const { postNode, postPath, postSEO } = this.props;\n    let title;\n    let Name;\n    let description;\n    let image;\n    let postURL;\n    let author;\n    let postMeta;\n    let ogImage\n    if (postSEO) {\n      postMeta = postNode.data;\n      ({ Name } = postMeta);\n      image = postMeta.image ? postMeta.image[0].url : \"\";\n      postURL = urljoin(config.siteUrl, config.pathPrefix, postPath);\n    } else {\n      title = config.siteTitle;\n      description = config.siteDescription;\n      ogImage = defaultOG;\n      image = config.siteLogo;\n    }\n\n    if(image && image.indexOf(\"http\") == -1) image = urljoin(config.siteUrl, config.pathPrefix, image);\n    const blogURL = urljoin(config.siteUrl, config.pathPrefix);\n    const schemaOrgJSONLD = [\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"WebSite\",\n        url: blogURL,\n        name: title,\n        alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\"\n      }\n    ];\n    if (postSEO) {\n      schemaOrgJSONLD.push(\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          itemListElement: [\n            {\n              \"@type\": \"ListItem\",\n              position: 1,\n              item: {\n                \"@id\": postURL,\n                name: title,\n                image\n              }\n            }\n          ]\n        },\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BlogPosting\",\n          url: blogURL,\n          name: title,\n          alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\",\n          headline: title,\n          image: {\n            \"@type\": \"ImageObject\",\n            url: image\n          },\n          description\n        }\n      );\n    }\n    return (\n      <Helmet>\n        {/* General tags */}\n        <title>{Name + (postMeta?.Venues[0] ? \" @ \"+postMeta.Venues[0].data.Name : \"\")  + (postMeta?.Venues[0] ? \", \"+postMeta.Venues[0].data.City + \", CO\" : \"\") + ` | ${config.siteTitle}`}</title>\n        <meta name=\"description\" content={description} />\n        <meta name=\"image\" content={image} />\n\n        {/* Schema.org tags */}\n        <script type=\"application/ld+json\">\n          {JSON.stringify(schemaOrgJSONLD)}\n        </script>\n\n        {/* OpenGraph tags */}\n        <meta property=\"og:url\" content={postSEO ? postURL : blogURL} />\n        {postSEO ? <meta property=\"og:type\" content=\"article\" /> : null}\n        <meta property=\"og:title\" content={title} />\n        <meta property=\"og:description\" content={description} />\n        <meta property=\"og:image\" content={ogImage ? ogImage : image} />\n        <meta\n          property=\"fb:app_id\"\n          content={config.siteFBAppID ? config.siteFBAppID : \"\"}\n        />\n\n        {/* Twitter Card tags */}\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta\n          name=\"twitter:creator\"\n          content={author && author.twitter ? author.twitter : \"\"}\n        />\n        <meta name=\"twitter:title\" content={title} />\n        <meta name=\"twitter:description\" content={description} />\n        <meta name=\"twitter:image\" content={ogImage ? ogImage : image} />\n      </Helmet>\n    );\n  }\n}\n\nexport default SEO;\n","import React, { Component } from \"react\";\nimport _ from \"lodash\";\nimport { Link } from \"gatsby\";\nimport \"./PostTags.css\";\n\nclass PostTags extends Component {\n  render() {\n    const { tags } = this.props;\n    return (\n      <div className=\"post-tag-container\">\n        {tags &&\n          tags.map(tag => (\n            <Link\n              key={tag}\n              style={{ textDecoration: \"none\" }}\n              to={`/tags/${_.kebabCase(tag)}`}\n            >\n              <button>{tag}</button>\n            </Link>\n          ))}\n      </div>\n    );\n  }\n}\n\nexport default PostTags;\n","import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../layout\";\nimport PostTags from \"../components/PostTags/PostTags\";\nimport SEO from \"../components/SEO/SEO\";\nimport config from \"../../data/SiteConfig\";\nimport moment from \"moment\";\nimport \"./b16-tomorrow-dark.css\";\nimport \"./post.css\";\n\nimport styled from \"styled-components\";\nimport EventCard from \"../components/EventCard/EventCard\";\nimport ArtistsGrid from \"../components/ArtistsGrid/ArtistsGrid\";\nimport PageTitle from \"../components/Pages/PageTitle/PageTitle\";\n\nexport default class PostTemplate extends React.Component {\n  render() {\n    const { data, pageContext } = this.props;\n    const { slug } = pageContext;\n    const postNode = data.airtable;\n    const post = postNode.data;\n    var imageUrl = post.Image ? post.Image[0].url : \"\";\n    if (!post.id) {\n      post.id = slug;\n    }\n    if (!post.category) {\n      post.category = config.postDefaultCategoryID;\n    }\n    return (\n      <Layout>\n        <div>\n          <Helmet />\n\n          <SEO postPath={slug} postNode={postNode} postSEO />\n          <EventHeaderWrapper>\n            <EventCard\n              featured={false}\n              event={postNode}\n              showDate\n              showTicket\n              showLink={false}\n            />\n            <div\n              className=\"event__bg-image\"\n              style={{\n                backgroundImage: \"url(\" + imageUrl + \")\",\n                backgroundPosition: \"center\",\n                backgroundSize: \"cover\",\n                position: \"absolute\",\n              }}\n            ></div>\n            <div className=\"post-meta\">\n              <PostTags tags={post.tags} />\n            </div>\n          </EventHeaderWrapper>\n          <EventBody\n            dangerouslySetInnerHTML={{ __html: post.Description || (post.Artists ? post.Artists[0].data.Bio : null) }}\n          ></EventBody>\n          {post.Artists && <><PageTitle subtitle={\"Artists At The Show\"} /><ArtistsGrid artists={post.Artists} /></>}\n        </div>\n      </Layout>\n    );\n  }\n}\n\n/* eslint no-undef: \"off\" */\nexport const pageQuery = graphql`\n  query EventBySlug($slug: String!) {\n    airtable(fields: { slug: { eq: $slug } }) {\n      fields {\n        slug\n      }\n      data {\n        Name\n        Subtitle\n        StartDate\n        EndDate\n        DoorsTime\n        TicketURL\n        Price\n        PriceRange\n        SoldOut\n        Description\n        Image {\n          url\n        }\n        Tags\n        Artist_Genres\n        Artists{\n          fields{\n            slug\n          }\n          data{\n            Name\n            Bio\n            Image{\n              url\n            }\n          }\n        }\n        Venues {\n          fields{\n            slug\n          }\n          data {\n            Name\n            City\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst EventHeaderWrapper = styled.section`\n  display: flex;\n  position: relative;\n  min-height: 50vh;\n  align-items: center;\n  justify-content: center;\n  overflow: hidden;\n\n  .event__bg-image {\n    z-index: -1;\n    filter: blur(5px);\n    width: 103%;\n    height: 105%;\n    transition: 3000ms;\n  }\n\n  &:hover {\n    .event__bg-image {\n      width: 105%;\n      height: 107%;\n    }\n  }\n\n  .event__card {\n    width: 90%;\n    height: auto;\n    grid-template-columns: 1fr;\n    margin: 3rem auto;\n\n    @media screen and (min-width: 70em){\n    width: 50%;\n    grid-template-columns: 1fr 2fr;\n\n    }\n\n    .event__name {\n      text-align: center;\n      font-size: 4rem;\n      margin: 1rem auto;\n    }\n    .event__subtitle {\n      text-align: center;\n      margin: 0 auto 1rem;\n      font-size: 2.5rem;\n    }\n    .event__venue-name {\n      text-align: center;\n      text-decoration: underline;\n      margin: 0 auto 0.5rem;\n    }\n\n    .event__image-wrapper {\n      img {\n        object-fit: contain;\n      }\n    }\n\n    .event__time-wrapper {\n      text-align: center;\n      font-size: 1.25rem;\n\n    }\n    .event__meta-wrapper {\n      display: flex;\n      align-items: center;\n      justify-content: space-around;\n      margin-top: 1rem;\n      .event__tag {\n        width: 30%;\n      }\n    }\n\n    .event__ticket-button {\n      grid-column: 1 / -1;\n    }\n  }\n`;\n\nconst EventBody = styled.div`\n  width: 100%;\n  padding: 2rem;\n  margin: 1rem auto;\n\n  @media screen and (min-width: 70em){\n\n    width: 50%;\n    margin: 2rem auto;\n\n  }\n\n  a{\n    display: none;\n  }\n`;\n"],"names":["normalize","strArray","resultArray","length","TypeError","match","first","shift","replace","i","component","push","str","join","parts","split","arguments","slice","call","module","exports","definition","artists","console","log","artistMap","map","artist","node","className","SEO","render","title","Name","description","image","postURL","postMeta","ogImage","this","props","postNode","postPath","postSEO","data","url","urljoin","config","defaultOG","indexOf","blogURL","schemaOrgJSONLD","name","alternateName","itemListElement","position","item","headline","Helmet","Venues","City","content","type","JSON","stringify","property","Component","PostTags","tags","tag","Link","key","style","textDecoration","to","PostTemplate","slug","pageContext","airtable","post","imageUrl","Image","id","category","EventHeaderWrapper","EventCard","featured","event","showDate","showTicket","showLink","backgroundImage","backgroundPosition","backgroundSize","EventBody","dangerouslySetInnerHTML","__html","Description","Artists","Bio","PageTitle","subtitle","ArtistsGrid","React","styled"],"sourceRoot":""}